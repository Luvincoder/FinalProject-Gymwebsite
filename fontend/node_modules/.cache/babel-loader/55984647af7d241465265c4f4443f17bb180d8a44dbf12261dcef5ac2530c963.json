{"ast":null,"code":"import React,{useContext}from'react';import{Box,Typography}from'@mui/material';import BodyPart from'./BodyPart';import ExerciseCard from'./ExerciseCard';import{ScrollMenu,VisibilityContext}from'react-horizontal-scrolling-menu';import'react-horizontal-scrolling-menu/dist/styles.css';import RightArrowIcon from'../assets/icons/right-arrow.png';import LeftArrowIcon from'../assets/icons/left-arrow.png';import{jsx as _jsx}from\"react/jsx-runtime\";const LeftArrow=()=>{const{scrollPrev}=useContext(VisibilityContext);return/*#__PURE__*/_jsx(Typography,{onClick:()=>scrollPrev(),className:\"right-arrow\",children:/*#__PURE__*/_jsx(\"img\",{src:LeftArrowIcon,alt:\"right-arrow\"})});};const RightArrow=()=>{const{scrollNext}=useContext(VisibilityContext);return/*#__PURE__*/_jsx(Typography,{onClick:()=>scrollNext(),className:\"left-arrow\",children:/*#__PURE__*/_jsx(\"img\",{src:RightArrowIcon,alt:\"right-arrow\"})});};const HorizontalScrollbar=_ref=>{let{data,bodyPart,setBodyPart,isBodyParts}=_ref;return/*#__PURE__*/_jsx(ScrollMenu,{LeftArrow:LeftArrow,RightArrow:RightArrow,children:data.map(item=>/*#__PURE__*/_jsx(Box,{itemId:item.id||item,title:item.id||item,m:\"0 20px\",children:isBodyParts?/*#__PURE__*/_jsx(BodyPart,{item:item,bodyPart:bodyPart,setBodyPart:setBodyPart,isBodyParts:true}):/*#__PURE__*/_jsx(ExerciseCard,{exercise:item})},item.id||item))});};export default HorizontalScrollbar;","map":{"version":3,"names":["React","useContext","Box","Typography","BodyPart","ExerciseCard","ScrollMenu","VisibilityContext","RightArrowIcon","LeftArrowIcon","jsx","_jsx","LeftArrow","scrollPrev","onClick","className","children","src","alt","RightArrow","scrollNext","HorizontalScrollbar","_ref","data","bodyPart","setBodyPart","isBodyParts","map","item","itemId","id","title","m","exercise"],"sources":["C:/Users/roup1/Desktop/Workout/fontend/src/components/HorizontalScrollbar.js"],"sourcesContent":["import React, {useContext} from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\nimport BodyPart from './BodyPart';\r\nimport ExerciseCard from './ExerciseCard'\r\nimport { ScrollMenu, VisibilityContext } from 'react-horizontal-scrolling-menu';\r\nimport 'react-horizontal-scrolling-menu/dist/styles.css';\r\n\r\n\r\n\r\n\r\nimport RightArrowIcon from '../assets/icons/right-arrow.png';\r\nimport LeftArrowIcon from '../assets/icons/left-arrow.png';\r\n\r\n\r\nconst LeftArrow = () => {\r\n    const { scrollPrev } = useContext(VisibilityContext);\r\n    return (\r\n        <Typography onClick={() => scrollPrev()}    className=\"right-arrow\">\r\n            <img src={LeftArrowIcon} alt=\"right-arrow\" />\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst RightArrow = () => {\r\n    const { scrollNext } = useContext(VisibilityContext);\r\n    return (\r\n        <Typography onClick={() => scrollNext()} className=\"left-arrow\">\r\n            <img src={RightArrowIcon} alt=\"right-arrow\" />\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst HorizontalScrollbar = ({ data, bodyPart, setBodyPart, isBodyParts }) => {\r\n    return (\r\n    <ScrollMenu LeftArrow={LeftArrow} RightArrow={RightArrow}>\r\n        {data.map((item) => (\r\n            <Box\r\n                key={item.id || item}\r\n                itemId={item.id || item}\r\n                title={item.id || item}\r\n                m=\"0 20px\"\r\n                \r\n            >\r\n            {isBodyParts ? <BodyPart item={item} bodyPart={bodyPart} setBodyPart={setBodyPart} isBodyParts />\r\n            : <ExerciseCard exercise={item} />\r\n            }\r\n            </Box>\r\n        ))}\r\n    </ScrollMenu>\r\n    );\r\n};\r\n\r\nexport default HorizontalScrollbar;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,UAAU,KAAO,OAAO,CACvC,OAASC,GAAG,CAAEC,UAAU,KAAQ,eAAe,CAC/C,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,OAASC,UAAU,CAAEC,iBAAiB,KAAQ,iCAAiC,CAC/E,MAAO,iDAAiD,CAKxD,MAAO,CAAAC,cAAc,KAAM,iCAAiC,CAC5D,MAAO,CAAAC,aAAa,KAAM,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAG3D,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACpB,KAAM,CAAEC,UAAW,CAAC,CAAGZ,UAAU,CAACM,iBAAiB,CAAC,CACpD,mBACII,IAAA,CAACR,UAAU,EAACW,OAAO,CAAEA,CAAA,GAAMD,UAAU,CAAC,CAAE,CAAIE,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC/DL,IAAA,QAAKM,GAAG,CAAER,aAAc,CAACS,GAAG,CAAC,aAAa,CAAE,CAAC,CACrC,CAAC,CAErB,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACrB,KAAM,CAAEC,UAAW,CAAC,CAAGnB,UAAU,CAACM,iBAAiB,CAAC,CACpD,mBACII,IAAA,CAACR,UAAU,EAACW,OAAO,CAAEA,CAAA,GAAMM,UAAU,CAAC,CAAE,CAACL,SAAS,CAAC,YAAY,CAAAC,QAAA,cAC3DL,IAAA,QAAKM,GAAG,CAAET,cAAe,CAACU,GAAG,CAAC,aAAa,CAAE,CAAC,CACtC,CAAC,CAErB,CAAC,CAED,KAAM,CAAAG,mBAAmB,CAAGC,IAAA,EAAkD,IAAjD,CAAEC,IAAI,CAAEC,QAAQ,CAAEC,WAAW,CAAEC,WAAY,CAAC,CAAAJ,IAAA,CACrE,mBACAX,IAAA,CAACL,UAAU,EAACM,SAAS,CAAEA,SAAU,CAACO,UAAU,CAAEA,UAAW,CAAAH,QAAA,CACpDO,IAAI,CAACI,GAAG,CAAEC,IAAI,eACXjB,IAAA,CAACT,GAAG,EAEA2B,MAAM,CAAED,IAAI,CAACE,EAAE,EAAIF,IAAK,CACxBG,KAAK,CAAEH,IAAI,CAACE,EAAE,EAAIF,IAAK,CACvBI,CAAC,CAAC,QAAQ,CAAAhB,QAAA,CAGbU,WAAW,cAAGf,IAAA,CAACP,QAAQ,EAACwB,IAAI,CAAEA,IAAK,CAACJ,QAAQ,CAAEA,QAAS,CAACC,WAAW,CAAEA,WAAY,CAACC,WAAW,MAAE,CAAC,cAC/Ff,IAAA,CAACN,YAAY,EAAC4B,QAAQ,CAAEL,IAAK,CAAE,CAAC,EAPzBA,IAAI,CAACE,EAAE,EAAIF,IASf,CACR,CAAC,CACM,CAAC,CAEjB,CAAC,CAED,cAAe,CAAAP,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}