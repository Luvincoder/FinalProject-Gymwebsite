{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roup1\\\\OneDrive\\\\Desktop\\\\Workout\\\\fontend\\\\src\\\\components\\\\Exercises.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport { Box, Stack, Typography } from '@mui/material';\nimport ExerciseCard from './ExerciseCard';\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exercises = ({\n  exercises,\n  setExercises,\n  bodyPart\n}) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const exercisesPerPage = 3;\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n  const paginate = (e, value) => {\n    setCurrentPage(value);\n    window.scrollTo({\n      top: 1800,\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      let exercisesData = [];\n      if (bodyPart === 'all') {\n        exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exerciseOptions);\n      } else {\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`, exerciseOptions);\n      }\n      setExercises(exercisesData);\n    };\n    fetchExercisesData();\n  }, [bodyPart, setExercises]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"exercises\",\n    sx: {\n      mt: {\n        lg: '110px'\n      }\n    },\n    mt: \"50px\",\n    p: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      fontWeight: \"bold\",\n      sx: {\n        fontSize: {\n          lg: '44px',\n          xs: '30px'\n        },\n        color: '#e0e0e0'\n      },\n      mb: \"46px\",\n      children: \"Showing Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        gap: {\n          lg: '107px',\n          xs: '50px'\n        }\n      },\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      children: currentExercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        exercise: exercise\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      mt: \"100px\",\n      alignItems: \"center\",\n      children: exercises.length > exercisesPerPage && /*#__PURE__*/_jsxDEV(Pagination, {\n        color: \"standard\",\n        shape: \"rounded\",\n        defaultPage: 1,\n        count: Math.ceil(exercises.length / exercisesPerPage),\n        page: currentPage,\n        onChange: paginate,\n        size: \"large\",\n        sx: {\n          button: {\n            color: '#e0e0e0',\n            '&.Mui-selected': {\n              backgroundColor: '#ff2625',\n              color: '#fff'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercises, \"GDYsIxij9y/ZFL42bMqqthZmeP4=\");\n_c = Exercises;\nexport default Exercises;\nvar _c;\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","Box","Stack","Typography","ExerciseCard","exerciseOptions","fetchData","jsxDEV","_jsxDEV","Exercises","exercises","setExercises","bodyPart","_s","currentPage","setCurrentPage","exercisesPerPage","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","paginate","e","value","window","scrollTo","top","behavior","fetchExercisesData","exercisesData","id","sx","mt","lg","p","children","variant","fontWeight","fontSize","xs","color","mb","fileName","_jsxFileName","lineNumber","columnNumber","direction","gap","flexWrap","justifyContent","map","exercise","index","alignItems","length","shape","defaultPage","count","Math","ceil","page","onChange","size","button","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/roup1/OneDrive/Desktop/Workout/fontend/src/components/Exercises.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport { Box, Stack, Typography } from '@mui/material';\r\nimport ExerciseCard from './ExerciseCard';\r\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\r\n\r\nconst Exercises = ({ exercises, setExercises, bodyPart }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const exercisesPerPage = 3;\r\n\r\n  const indexOfLastExercise = currentPage * exercisesPerPage;\r\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\r\n  const currentExercises = exercises.slice(\r\n    indexOfFirstExercise,\r\n    indexOfLastExercise\r\n  );\r\n\r\n  const paginate = (e, value) => {\r\n    setCurrentPage(value);\r\n    window.scrollTo({ top: 1800, behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchExercisesData = async () => {\r\n      let exercisesData = [];\r\n      if (bodyPart === 'all') {\r\n        exercisesData = await fetchData(\r\n          'https://exercisedb.p.rapidapi.com/exercises',\r\n          exerciseOptions\r\n        );\r\n      } else {\r\n        exercisesData = await fetchData(\r\n          `https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`,\r\n          exerciseOptions\r\n        );\r\n      }\r\n      setExercises(exercisesData);\r\n    };\r\n\r\n    fetchExercisesData();\r\n  }, [bodyPart, setExercises]);\r\n\r\n  return (\r\n    <Box id=\"exercises\" sx={{ mt: { lg: '110px' } }} mt=\"50px\" p=\"20px\">\r\n      <Typography\r\n        variant=\"h4\"\r\n        fontWeight=\"bold\"\r\n        sx={{ fontSize: { lg: '44px', xs: '30px' }, color: '#e0e0e0' }}\r\n        mb=\"46px\"\r\n      >\r\n        Showing Results\r\n      </Typography>\r\n      <Stack\r\n        direction=\"row\"\r\n        sx={{ gap: { lg: '107px', xs: '50px' } }}\r\n        flexWrap=\"wrap\"\r\n        justifyContent=\"center\"\r\n      >\r\n        {currentExercises.map((exercise, index) => (\r\n          <ExerciseCard key={index} exercise={exercise} />\r\n        ))}\r\n      </Stack>\r\n      <Stack mt=\"100px\" alignItems=\"center\">\r\n        {exercises.length > exercisesPerPage && (\r\n          <Pagination\r\n            color=\"standard\"\r\n            shape=\"rounded\"\r\n            defaultPage={1}\r\n            count={Math.ceil(exercises.length / exercisesPerPage)}\r\n            page={currentPage}\r\n            onChange={paginate}\r\n            size=\"large\"\r\n            sx={{ button: { color: '#e0e0e0', '&.Mui-selected': { backgroundColor: '#ff2625', color: '#fff' } } }}\r\n          />\r\n        )}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Exercises;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}