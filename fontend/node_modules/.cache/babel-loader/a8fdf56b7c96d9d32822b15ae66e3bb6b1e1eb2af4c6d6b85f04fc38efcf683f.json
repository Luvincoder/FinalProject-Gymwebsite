{"ast":null,"code":"import React,{useEffect,useState}from'react';import Pagination from'@mui/material/Pagination';import{Box,Stack,Typography}from'@mui/material';import ExerciseCard from'./ExerciseCard';import{exerciseOptions,fetchData}from'../utils/fetchData';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Exercises=_ref=>{let{exercises,setExercises,bodyPart}=_ref;const[currentPage,setCurrentPage]=useState(1);const exercisesPerPage=3;const indexOfLastExercise=currentPage*exercisesPerPage;const indexOfFirstExercise=indexOfLastExercise-exercisesPerPage;const currentExercises=exercises.slice(indexOfFirstExercise,indexOfLastExercise);const paginate=(e,value)=>{setCurrentPage(value);window.scrollTo({top:1800,behavior:'smooth'});};useEffect(()=>{const fetchExercisesData=async()=>{let exercisesData=[];if(bodyPart==='all'){exercisesData=await fetchData('https://exercisedb.p.rapidapi.com/exercises',exerciseOptions);}else{exercisesData=await fetchData(\"https://exercisedb.p.rapidapi.com/exercises/bodyPart/\".concat(bodyPart),exerciseOptions);}setExercises(exercisesData);};fetchExercisesData();},[bodyPart,setExercises]);return/*#__PURE__*/_jsxs(Box,{id:\"exercises\",sx:{mt:{lg:'110px'}},mt:\"50px\",p:\"20px\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",fontWeight:\"bold\",sx:{fontSize:{lg:'44px',xs:'30px'},color:'#e0e0e0'},mb:\"46px\",children:\"Showing Results\"}),/*#__PURE__*/_jsx(Stack,{direction:\"row\",sx:{gap:{lg:'107px',xs:'50px'}},flexWrap:\"wrap\",justifyContent:\"center\",children:currentExercises.map((exercise,index)=>/*#__PURE__*/_jsx(ExerciseCard,{exercise:exercise},index))}),/*#__PURE__*/_jsx(Stack,{mt:\"100px\",alignItems:\"center\",children:exercises.length>exercisesPerPage&&/*#__PURE__*/_jsx(Pagination,{color:\"standard\",shape:\"rounded\",defaultPage:1,count:Math.ceil(exercises.length/exercisesPerPage),page:currentPage,onChange:paginate,size:\"large\",sx:{button:{color:'#e0e0e0','&.Mui-selected':{backgroundColor:'#ff2625',color:'#fff'}}}})})]});};export default Exercises;","map":{"version":3,"names":["React","useEffect","useState","Pagination","Box","Stack","Typography","ExerciseCard","exerciseOptions","fetchData","jsx","_jsx","jsxs","_jsxs","Exercises","_ref","exercises","setExercises","bodyPart","currentPage","setCurrentPage","exercisesPerPage","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","paginate","e","value","window","scrollTo","top","behavior","fetchExercisesData","exercisesData","concat","id","sx","mt","lg","p","children","variant","fontWeight","fontSize","xs","color","mb","direction","gap","flexWrap","justifyContent","map","exercise","index","alignItems","length","shape","defaultPage","count","Math","ceil","page","onChange","size","button","backgroundColor"],"sources":["C:/Users/roup1/Desktop/Workout/fontend/src/components/Exercises.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport { Box, Stack, Typography } from '@mui/material';\r\nimport ExerciseCard from './ExerciseCard';\r\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\r\n\r\nconst Exercises = ({ exercises, setExercises, bodyPart }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const exercisesPerPage = 3;\r\n\r\n  const indexOfLastExercise = currentPage * exercisesPerPage;\r\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\r\n  const currentExercises = exercises.slice(\r\n    indexOfFirstExercise,\r\n    indexOfLastExercise\r\n  );\r\n\r\n  const paginate = (e, value) => {\r\n    setCurrentPage(value);\r\n    window.scrollTo({ top: 1800, behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchExercisesData = async () => {\r\n      let exercisesData = [];\r\n      if (bodyPart === 'all') {\r\n        exercisesData = await fetchData(\r\n          'https://exercisedb.p.rapidapi.com/exercises',\r\n          exerciseOptions\r\n        );\r\n      } else {\r\n        exercisesData = await fetchData(\r\n          `https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`,\r\n          exerciseOptions\r\n        );\r\n      }\r\n      setExercises(exercisesData);\r\n    };\r\n\r\n    fetchExercisesData();\r\n  }, [bodyPart, setExercises]);\r\n\r\n  return (\r\n    <Box id=\"exercises\" sx={{ mt: { lg: '110px' } }} mt=\"50px\" p=\"20px\">\r\n      <Typography\r\n        variant=\"h4\"\r\n        fontWeight=\"bold\"\r\n        sx={{ fontSize: { lg: '44px', xs: '30px' }, color: '#e0e0e0' }}\r\n        mb=\"46px\"\r\n      >\r\n        Showing Results\r\n      </Typography>\r\n      <Stack\r\n        direction=\"row\"\r\n        sx={{ gap: { lg: '107px', xs: '50px' } }}\r\n        flexWrap=\"wrap\"\r\n        justifyContent=\"center\"\r\n      >\r\n        {currentExercises.map((exercise, index) => (\r\n          <ExerciseCard key={index} exercise={exercise} />\r\n        ))}\r\n      </Stack>\r\n      <Stack mt=\"100px\" alignItems=\"center\">\r\n        {exercises.length > exercisesPerPage && (\r\n          <Pagination\r\n            color=\"standard\"\r\n            shape=\"rounded\"\r\n            defaultPage={1}\r\n            count={Math.ceil(exercises.length / exercisesPerPage)}\r\n            page={currentPage}\r\n            onChange={paginate}\r\n            size=\"large\"\r\n            sx={{ button: { color: '#e0e0e0', '&.Mui-selected': { backgroundColor: '#ff2625', color: '#fff' } } }}\r\n          />\r\n        )}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Exercises;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}