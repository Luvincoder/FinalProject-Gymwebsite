{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roup1\\\\OneDrive\\\\Desktop\\\\Workout\\\\fontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true); // State to toggle between login and register\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(''); // Error message state\n  const [successMessage, setSuccessMessage] = useState(''); // Success message state\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(''); // Reset error state\n    setSuccessMessage(''); // Reset success message\n\n    const endpoint = isLogin ? '/login' : '/register';\n    const payload = isLogin ? {\n      username,\n      password\n    } : {\n      username,\n      email,\n      password\n    };\n    try {\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        if (isLogin) {\n          setSuccessMessage('Login successful!');\n          localStorage.setItem('token', data.token); // Store JWT token in local storage\n          // Redirect to home or dashboard page\n          window.location.href = '/'; // Redirect to homepage or protected route\n        } else {\n          setSuccessMessage('Registration successful! Please log in.');\n          setIsLogin(true);\n        }\n      } else {\n        setError(data.error || 'Something went wrong. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Network error. Please check your connection.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 28\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => setIsLogin(!isLogin),\n        className: \"toggle-link\",\n        children: isLogin ? \"Don't have an account? Register here\" : 'Already have an account? Login here'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"dkVxWHoQ+DqBr3Ijt0A9JHyYaRE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","isLogin","setIsLogin","username","setUsername","password","setPassword","email","setEmail","error","setError","successMessage","setSuccessMessage","handleSubmit","e","preventDefault","endpoint","payload","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","window","location","href","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/roup1/OneDrive/Desktop/Workout/fontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n  const [isLogin, setIsLogin] = useState(true); // State to toggle between login and register\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [error, setError] = useState(''); // Error message state\r\n  const [successMessage, setSuccessMessage] = useState(''); // Success message state\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(''); // Reset error state\r\n    setSuccessMessage(''); // Reset success message\r\n\r\n    const endpoint = isLogin ? '/login' : '/register';\r\n    const payload = isLogin\r\n      ? { username, password }\r\n      : { username, email, password };\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        if (isLogin) {\r\n          setSuccessMessage('Login successful!');\r\n          localStorage.setItem('token', data.token); // Store JWT token in local storage\r\n          // Redirect to home or dashboard page\r\n          window.location.href = '/'; // Redirect to homepage or protected route\r\n        } else {\r\n          setSuccessMessage('Registration successful! Please log in.');\r\n          setIsLogin(true);\r\n        }\r\n      } else {\r\n        setError(data.error || 'Something went wrong. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError('Network error. Please check your connection.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <h2>{isLogin ? 'Login' : 'Register'}</h2>\r\n\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n\r\n        {!isLogin && (\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        )}\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\">{isLogin ? 'Login' : 'Register'}</button>\r\n\r\n        <p onClick={() => setIsLogin(!isLogin)} className=\"toggle-link\">\r\n          {isLogin\r\n            ? \"Don't have an account? Register here\"\r\n            : 'Already have an account? Login here'}\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}